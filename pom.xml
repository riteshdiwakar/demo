<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cox.bmw</groupId>
	<artifactId>demo</artifactId>
	<version>1.0.5</version>
	<packaging>jar</packaging>

	<name>demo</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/postgresql/postgresql -->
		<dependency>
		    <groupId>postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>9.1-901.jdbc4</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons-core -->
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-commons-core</artifactId>
		    <version>1.0.0.RELEASE</version>
		</dependency>
				
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>sharmasudhakar3/my-image</imageName>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<dockerHost>https://192.168.99.100:2376</dockerHost>
					<dockerCertPath>C:\Users\rdiwakar\.docker\machine\machines\default</dockerCertPath>
					<dockerDirectory>${project.basedir}</dockerDirectory>
                        <resources>
                                <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}.jar</include>
                                </resource>
                        </resources>
                </configuration>
	<!-- 			<configuration>
					<baseImage>java</baseImage>
					<entryPoint>["java","-Dspring.config.location=/opt/props/dev/application.properties","-jar","/${project.build.finalName}.jar"]</entryPoint>
					<imageName>sharmasudhakar3/my-image</imageName>
					<imageTags>
			           <imageTag>${project.version}</imageTag>
			           <imageTag>latest</imageTag>
			        </imageTags>
					<serverId>docker-hub</serverId>
					copy the service's jar file from target into the root directory of the image 
			        <resources>
			           <resource>
			             <targetPath>/</targetPath>
			             <directory>${project.build.directory}</directory>
			             <include>${project.build.finalName}.jar</include>
			           </resource>
			        </resources>
				</configuration>
	 -->			<executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<!-- <execution>
						<phase>package</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<image>sharmasudhakar3/my-image</image>
							<serverId>docker-hub</serverId>
							<pushImage>true</pushImage>
						</configuration>
					</execution>
 -->				</executions>
			</plugin>
		</plugins>
	</build>
</project>
